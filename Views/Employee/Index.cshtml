@model IEnumerable<zeroHunger.DTOs.OrderDTO>

@{
    ViewBag.Title = "Index";
}

@if (Session["emp"] != null)
{
    var emp = (zeroHunger.EF.Employee)Session["emp"];
    <h2><text>Welcome, @emp.eName </text></h2>
    if (TempData["Msg"] != null)
    {
        <span class="alert alert info">@TempData["Msg"]</span>
    }
    <p>

        @Html.ActionLink("Logout", "Logout", "Login", new { area = "" }, new { @class = "btn btn-danger" })

    </p>
    <table class="table">
        <tr>
            <th>
                Order ID
            </th>
            <th>
                Restaurant Name
                </th>
            <th>
                Food Name
            </th>
            <th>
                Preserve Time
            </th>

            <th>
                Order Status
            </th>
            <th>
                Rider ID
            </th>
            <th>
                Action
            </th>
        </tr>


        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.oId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.resName)
                    </td>

                <td>
                    @Html.DisplayFor(modelItem => item.foodName)
                </td>
                <td>
                    @{
                        DateTime preserveTime = item.prsrvTime;
                        TimeSpan timeRemaining = preserveTime - DateTime.Now;

                        if (timeRemaining.TotalMilliseconds > 0)
                        {
                            <span>@($"{timeRemaining.Days} days, {timeRemaining.Hours} hr, {timeRemaining.Minutes} min, {timeRemaining.Seconds} sec remaining")</span>
                        }
                        else
                        {
                            <span>Item expired</span>
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.orderStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.riderId)
                </td>
                <td>
                    @if (timeRemaining.TotalMilliseconds > 0)
                    {

                        if (item.riderId.Equals(null) && item.orderStatus.Equals("collect"))
                        {
                            <form action="/Employee/Index" method="post">
                                <input type="hidden" name="rId" value="@item.rId" />
                                <input type="hidden" name="riderId" value="@emp.empId" />
                                <input type="submit" value="Accept Order" name="" class="btn btn-success" />
                            </form>
                        }
                        if (item.riderId.Equals(emp.empId) && item.orderStatus.Equals("Collecting"))
                        {
                            <form action="/Employee/Completed" method="post">
                                <input type="hidden" name="rId" value="@item.rId" />
                                <input type="hidden" name="riderId" value="@emp.empId" />
                                <input type="submit" value="Order Completed" name="" class="btn btn-success" />
                            </form>
                        }
                        if (item.riderId.Equals(emp.empId) && item.orderStatus.Equals("Collected"))
                        {
                            <text>Order Completed</text>
                        }
                    }
                    </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }


    </table>
}
else
{
    Response.Redirect("/Login/Index");
}

